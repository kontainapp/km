name: Km Build
description: Build km - regular. coverage and valgrind based on build-flavor input parameter
inputs:
  build-flavor:
    description: coverage or valgrind
    required: false
    default: '' # assumes all

runs:
  using: "composite"
  steps:

    - id: make-image-name
      run: |
        [[ -z "${{inputs.build-flavor}}" ]] && echo "img=" >> $GITHUB_OUTPUT || echo "img=${{inputs.build-flavor}}-" >> $GITHUB_OUTPUT
      shell: bash

    - name: Print build environment info
      run: |
        echo "Event: ${{ github.event_name }} inputs.run_type: ${{ github.event.inputs.run_type }}"
        echo ====Environment info===
        echo "SHA: $(git rev-parse HEAD)"
        echo "=== Last 10 commits:"
        git log -n 10 --graph --pretty=format:'%h% %d %s %cr %ce'
        echo "=== VM/OS:"
        cat /proc/version
        cat /etc/os-release
        echo "=== Docker version:"
        docker version
        echo ==== Environment Variables
        env
        echo ==== CPU Info
        lscpu
      shell: bash

    - name: Login into Azure Repository
      run: make -C cloud/azure login-cli
      shell: bash

    - name: Prepare KM build env
      run: make -C tests pull-buildenv-image .buildenv-local-lib
      shell: bash

    - name: Check clang-format on source code
      run: make withdocker TARGET=clang-format-check
      shell: bash

    - name: Build KM and tests using buildenv image
      run: make -j withdocker TARGET=${{inputs.build-flavor}} RUN_IN_CI=1
      shell: bash

    - name: Build and push KM testenv image
      run: make -C tests ${{steps.make-image-name.outputs.img}}testenv-image push-${{steps.make-image-name.outputs.img}}testenv-image
      shell: bash
