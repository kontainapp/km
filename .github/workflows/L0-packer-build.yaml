name: Build L0 Base Image on Azure
# Warning: Azure currently does not allow to rename images, AND existing image is deleted before the
# packer can start creation of a new one.
# So be VERY careful with automated image creation. Only kick it off on merges to master, and NOT
# on a pull requests.
# For pull requests, manual test (make -C cloud/azure L0-image L0_VMIMAGE_NAME="some_tmp_name") is expected

env:
  IMAGE_VERSION: ci-${{ github.run_number }} # use this for all other containers
  SP_APPID: ${{ secrets.SP_APPID }}
  SP_PASSWORD: ${{ secrets.SP_PASSWORD }}
  SP_TENANT: ${{ secrets.SP_TENANT }}
  L0_IMAGE_NAME: L0BaseImage-backup
  # TRACE: true # uncomment to enable '-x' in all bash scripts

on:
  push:
    branches: [ msterin/packer-release ]  # TODO !!!! roll back to master
    paths:
      - '**/L0-image.pkr.hcl'
      - '**/L0-image-provision.sh'
      - .github/workflows/L0-packer-build.yaml

  # Manual trigger.
  # See https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/
  workflow_dispatch:
    inputs:
      run_type:
        description: Image To build (TBD)
        default: L0BaseImage
        required: true


jobs:
  build-base-image:
    name: Build Azure Base Image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Print build environment info
        run: |
          echo "Event: ${{ github.event_name }} inputs.run_type: ${{ github.event.inputs.run_type }}"
          echo ====Environment info===
          echo "SHA: $(git rev-parse HEAD)"
          echo "=== Last 10 commits:"
          git log -n 10 --graph --pretty=format:'%h% %d %s %cr %ce'
          echo "=== VM/OS:"
          cat /proc/version
          cat /etc/os-release
          echo "=== Docker version:"
          docker version
          echo ==== Environment Variables
          env
          echo ==== CPU Info
          lscpu

      - name: login to Azure
        run: make -C cloud/azure login-cli

      - name: Build L0 Base image
        run: make -C cloud/azure L0-image L0_VMIMAGE_NAME="${{ env.L0_IMAGE_NAME }}"
