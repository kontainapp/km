{
   // Use IntelliSense to learn about possible attributes.
   // Hover to view descriptions of existing attributes.
   // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
   "version": "0.2.0",
   "configurations": [
      {
         "name": "KM with a test payload",
         "type": "cppdbg",
         "request": "launch",
         "program": "${workspaceFolder}/build/km/km",
         "args": [
            "tests/${input:test_payload}.${input:payload_type}"
         ],
         "stopAtEntry": true,
         "cwd": "${workspaceFolder}",
         "environment": [],
         "externalConsole": false,
         "MIMode": "gdb",
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            },
            {
               "description": "Load KM specific commands",
               "text": "source ${workspaceFolder}/km/gdb/list.gdb",
               "ignoreFailures": false
            },
            {
               "description": "Ignore VCPUSTOP signal",
               "text": "handle SIG63 nostop",
               "ignoreFailures": false
            }
         ]
      },
      {
         "name": "KM with a test payload and KM arg",
         "type": "cppdbg",
         "request": "launch",
         "program": "${workspaceFolder}/build/km/km",
         "args": [
            "${input:km_args}",
            "tests/${input:test_payload}.${input:payload_type}"
         ],
         "stopAtEntry": true,
         "cwd": "${workspaceFolder}",
         "environment": [],
         "externalConsole": false,
         "MIMode": "gdb",
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            },
            {
               "description": "Load KM specific commands",
               "text": "source ${workspaceFolder}/km/gdb/list.gdb",
               "ignoreFailures": false
            },
            {
               "description": "Ignore VCPUSTOP signal",
               "text": "handle SIG63 nostop",
               "ignoreFailures": false
            }
         ]
      },
      {
         "name": "KM with a test payload and an argument",
         "type": "cppdbg",
         "request": "launch",
         "program": "${workspaceFolder}/build/km/km",
         "args": [
            "${input:test_payload}.${input:payload_type}",
            "${input:payload_args}"
         ],
         "stopAtEntry": true,
         "cwd": "${workspaceFolder}/tests",
         "environment": [],
         "externalConsole": false,
         "MIMode": "gdb",
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            },
            {
               "description": "Load KM specific commands",
               "text": "source ${workspaceFolder}/km/gdb/list.gdb",
               "ignoreFailures": false
            },
            {
               "description": "Ignore VCPUSTOP signal",
               "text": "handle SIG63 nostop",
               "ignoreFailures": false
            }
         ]
      },
      {
         "name": "KM with GDB enabled, running a test payload",
         "type": "cppdbg",
         "request": "launch",
         "program": "${workspaceFolder}/build/km/km",
         "args": [
            "-g",
            "tests/${input:test_payload}.${input:payload_type}"
         ],
         "stopAtEntry": true,
         "cwd": "${workspaceFolder}",
         "environment": [],
         "externalConsole": false,
         "MIMode": "gdb",
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            },
            {
               "description": "Ignore VCPUSTOP signal",
               "text": "handle SIG63 nostop",
               "ignoreFailures": false
            }
         ]
      },
      {
         "name": "KM with GDB attach enabled, running a test payload",
         "type": "cppdbg",
         "request": "launch",
         "program": "${workspaceFolder}/build/km/km",
         "args": [
            "-g",
            "--gdb-listen",
            "tests/${input:test_payload}.${input:payload_type}"
         ],
         "stopAtEntry": true,
         "cwd": "${workspaceFolder}",
         "environment": [],
         "externalConsole": false,
         "MIMode": "gdb",
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            },
            {
               "description": "Ignore VCPUSTOP signal",
               "text": "handle SIG63 nostop",
               "ignoreFailures": false
            }
         ]
      },
      {
         "name": "Direct debugging of tests/*.km",
         "type": "cppdbg",
         "request": "launch",
         "cwd": "${workspaceFolder}",
         "program": "${workspaceFolder}/tests/${input:test_payload}.km",
         "args": [
            "set debug remote 0"
         ],
         "stopAtEntry": true,
         "miDebuggerServerAddress": "localhost:2159",
         "miDebuggerArgs": "--silent",
         "debugServerPath": "${workspaceFolder}/build/km/km",
         "debugServerArgs": "-g ${workspaceFolder}/tests/${input:test_payload}.km",
         "serverLaunchTimeout": 5000,
         "filterStderr": true,
         "filterStdout": true,
         "serverStarted": "GdbServerStubStarted",
         "logging": {
            "moduleLoad": false,
            "trace": false,
            "engineLogging": false,
            "programOutput": true,
            "exceptions": true,
            "traceResponse": false
         },
         "environment": [],
         "externalConsole": false,
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            },
            {
               "description": "Make sure we stop somewhere",
               "text": "b printf",
               "ignoreFailures": false
            }
         ]
      },
      {
         "name": "Demo: payloads/dweb-demo.km at 8081",
         "type": "cppdbg",
         "request": "launch",
         "cwd": "${workspaceFolder}/payloads/demo-dweb/dweb",
         "program": "${workspaceFolder}/payloads/demo-dweb/dweb/dweb.km",
         "args": [
            "set debug remote 0"
         ],
         "stopAtEntry": true,
         "miDebuggerServerAddress": "localhost:2159",
         "miDebuggerArgs": "--silent",
         "debugServerPath": "${workspaceFolder}/build/km/km",
         "debugServerArgs": "-g ${workspaceFolder}/payloads/demo-dweb/dweb/dweb.km 8081 ${workspaceFolder}/payloads/demo-dweb/dweb",
         "serverLaunchTimeout": 5000,
         "filterStderr": true,
         "filterStdout": false,
         "serverStarted": "GdbServerStubStarted",
         "logging": {
            "moduleLoad": false,
            "trace": false,
            "engineLogging": false,
            "programOutput": true,
            "exceptions": true,
            "traceResponse": false
         },
         "environment": [],
         "externalConsole": false,
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            }
         ]
      },
      {
         "name": "KM dump",
         "type": "cppdbg",
         "request": "launch",
         "program": "${workspaceFolder}/build/km/km",
         "args": [],
         "coreDumpPath": "${workspaceFolder}/build/km/core",
         "stopAtEntry": true,
         "cwd": "${workspaceFolder}",
         "environment": [],
         "externalConsole": false,
         "MIMode": "gdb",
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            }
         ]
      },
      {
         "name": "Direct debugging of node.km micro-srv.js",
         "type": "cppdbg",
         "request": "launch",
         "cwd": "${workspaceFolder}/payloads/node",
         "program": "${workspaceFolder}/payloads/node/node/out/Debug/node.km",
         "args": [
            "set debug remote 0"
         ],
         "stopAtEntry": true,
         "miDebuggerServerAddress": "localhost:2159",
         "miDebuggerArgs": "--silent",
         "debugServerPath": "${workspaceFolder}/build/km/km",
         "debugServerArgs": "-g ${workspaceFolder}/payloads/node/node/out/Debug/node.km ${workspaceFolder}/payloads/node/scripts/micro-srv.js",
         "serverLaunchTimeout": 60000,
         "filterStderr": true,
         "filterStdout": false,
         "serverStarted": "GdbServerStubStarted",
         "logging": {
            "moduleLoad": false,
            "trace": false,
            "engineLogging": false,
            "programOutput": true,
            "exceptions": true,
            "traceResponse": false
         },
         "environment": [],
         "externalConsole": false,
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            },
            {
               "description": "Make sure we stop somewhere",
               "text": "b printf",
               "ignoreFailures": false
            }
         ]
      },
      {
         "name": "KM Node.km micro-srv.js",
         "type": "cppdbg",
         "request": "launch",
         "program": "${workspaceFolder}/build/km/km",
         "args": [
            "payloads/node/node/out/Debug/node.km",
            "payloads/node/scripts/micro-srv.js"
         ],
         "stopAtEntry": true,
         "cwd": "${workspaceFolder}",
         "environment": [],
         "externalConsole": false,
         "MIMode": "gdb",
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            }
         ]
      },
      {
         "name": "Direct debugging of python.km scripts/...",
         "type": "cppdbg",
         "request": "launch",
         "cwd": "${workspaceFolder}/payloads/python",
         "program": "${workspaceFolder}/payloads/python/cpython/python.km",
         "args": [
            "set debug remote 0"
         ],
         "stopAtEntry": true,
         "miDebuggerServerAddress": "localhost:2159",
         "miDebuggerArgs": "--silent",
         "debugServerPath": "${workspaceFolder}/build/km/km",
         "debugServerArgs": "-g ${workspaceFolder}/payloads/python/cpython/python.km ${workspaceFolder}/payloads/python/${input:python_script}",
         "serverLaunchTimeout": 60000,
         "filterStderr": true,
         "filterStdout": false,
         "serverStarted": "GdbServerStubStarted",
         "logging": {
            "moduleLoad": false,
            "trace": false,
            "engineLogging": false,
            "programOutput": true,
            "exceptions": true,
            "traceResponse": false
         },
         "environment": [],
         "externalConsole": false,
         "setupCommands": [
            {
               "description": "Enable pretty-printing for gdb",
               "text": "-enable-pretty-printing",
               "ignoreFailures": true
            },
            {
               "description": "Make sure we stop somewhere",
               "text": "b printf",
               "ignoreFailures": false
            }
         ]
      },
      {
         "name": "Python.km: Debugging Current Py File under KM",
         "type": "python",
         "request": "launch",
         "program": "${file}",
         "console": "integratedTerminal",
         "python": "${workspaceFolder}/payloads/python/cpython/python",
         "stopOnEntry": true
      }
   ],
   "inputs": [
      {
         "id": "test_payload",
         "description": "Test payload (no suffix) to debug (e.g. 'hello' for tests/hello.km)",
         "default": "hello",
         "type": "pickString",
         "options": [
            "sigaltstack_test",
            "clone_test",
            "socket_test",
            "pthread_cancel_test",
            "var_storage_test",
            "exit_value_test",
            "hello_test",
            "mprotect_test",
            "hello_html_test",
            "hello_loop_test",
            "hello_2_loops_test",
            "hello_2_loops_tls_test",
            "load_test",
            "brk_test",
            "gdb_test",
            "mmap_test",
            "mmap_1_test",
            "getline_test",
            "mem_test",
            "mprotect_test",
            "hello_2_loops",
            "mutex_test",
            "exit_grp_test",
            "stray_test",
            "signal_test",
            "madvise_test",
            "argv0_test",
            "shebang_test",
            "exec_test"
         ]
      },
      {
         "id": "payload_type",
         "description": "Payload Type",
         "default": "km",
         "type": "pickString",
         "options": [
            "km",
            "kmd",
            "so",
            "alpine.km",
            "fedora"
         ]
      },
      {
         "id": "payload_args",
         "description": "Arguments for the payload",
         "default": "",
         "type": "promptString"
      },
      {
         "id": "km_args",
         "description": "Arguments for the km",
         "default": "",
         "type": "promptString"
      },
      {
         "id": "python_module",
         "description": "Python modules to test misc, things with",
         "default": "falcon",
         "type": "pickString",
         "options": [
            "Modules/falcon/",
            "Modules/gevent/",
            "Modules/numpy/",
            "Modules/markupsafe/",
            "/"
         ]
      },
      {
         "id": "python_script",
         "description": "Python scripts to test things with",
         "default": "scripts/km_debug.py",
         "type": "pickString",
         "options": [
            "scripts/km_debug.py",
            "scripts/micro_srv.py",
            "scripts/hello_again.py",
            "scripts/hello_loop_nosleep.py",
            "scripts/hello_loop.py"
         ]
      }
   ]
}