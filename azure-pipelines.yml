#
# Kontain Monitor Azure Pipeline definition
#
name: ci-$(BuildID) $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - master
      - ci/* # prefix ci/ to force CI on every push. e.g. ci/msterin/test-azure-devops
  paths:
    exclude:
      - README.md
      - compile_commands.json
      - .vscode/*
      - docs/*
      - demo/nokia/*

pr:
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - compile_commands.json
      - .vscode/*
      - docs/*
      - demo/nokia/*

jobs:
  - job: normal_ci
    variables:
      vmImage: "ubuntu-18.04"
      # NOTE: In Azure pipeline setting a variable also makes variable's UPPCASE_NAME
      # exposed in environment for all tasks. E.g. 'dtype=fedora' means all tasks will have
      # an environment DTYPE=fedora.
      dtype: $(buildenv.type) # until we add other distros, this always maps to fedora (see 'strategy' below)
      buildenv_image_version: latest # use this for all buildenv containers
      image_version: ci-$(Build.BuildId) # use this for all other containers
      #trace: true # uncomment to enable '-x' in all bash scripts

    # Default job has a 60 minutes timeout. Sets this to 0 to use the max
    # 360 minutes timeout.
    timeoutInMinutes: 0
    pool:
      vmImage: $(vmImage)
    strategy:
      matrix:
        fedora:
          buildenv.type: fedora
        # Note: DTYPE=$(buildenv.type) below is needed only for Ubuntu; fedora is the default
        # ubuntu:
        #   buildenv.type: ubuntu
    steps:
      - template: templates/setup.yaml

      - template: templates/build.yaml

      - template: templates/ci_normal.yaml

      - bash: echo TODO push-runenv-image and test in kubernetes... see make validate-runenv-image
        displayName: Python.km runenv test (TODO)
        timeoutInMinutes: 2

      - bash: echo TODO push-runenv-image and test in kubernetes... see make validate-runenv-image
        displayName: Node.km runenv test (TODO)
        timeoutInMinutes: 2

      - bash: echo TODO push-runenv-image and test in kubernetes... see make validate-runenv-image
        displayName: Java.kmd runenv test (TODO)
        timeoutInMinutes: 2

      - bash: |
          [ "$TRACE" ] && set -x
          # TODO - if the **test** failed (especially with kmcore), we want to keep these pods for a few days
          # Setting vars doc: https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
          echo "======= Printing statuses and cleaning up ======"
          rm -f ~/.kube/config
          az logout
        condition: always()
        displayName: Cleanup test job, purge old test images and logout
