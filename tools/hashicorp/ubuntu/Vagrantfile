# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# Vagrant-managed VM with Kontain KM / KKM preinstalled.
#

Vagrant.configure(2) do |config|

  config.vm.box = "generic/ubuntu2010"

  config.vm.provision "file", source: "../../../build/kkm.run", destination: "/tmp/kontain/"
  config.vm.provision "file", source: "../daemon.json", destination: "/tmp/kontain/"
  config.vm.provision "file", source: "../../../build/kontain.tar.gz", destination: "/tmp/kontain/"
  #   config.vm.network "forwarded_port", guest: 8080, host: 8080

  # find out Kontain version (it can be defined in env)
  kontain_release=ENV['KM_VAGRANT_KM_RELEASE']
  if kontain_release == nil then
    kontain_release="" # use default as provided by km-releases/default-release file in master branch
  end

  config.vm.provision "shell", inline: <<-SHELL

   # this seems to be needed on 'generic/ubuntu' box only
   ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf

   # Install KKM... it will also validate hardware.
   apt-get install linux-headers-$(uname -r) -y 2>&1
   /tmp/kontain/kkm.run 2>&1

   # Install Docker
   apt-get install -q -y apt-transport-https ca-certificates \
         curl gnupg-agent software-properties-common
   curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - 2>&1

   add-apt-repository \
      "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

   apt-get update -y -q
   apt-get install -y -q docker-ce docker-ce-cli containerd.io

   # Install Kontain.
   mkdir -p /opt/kontain && tar -C /opt/kontain -xzf /tmp/kontain/kontain.tar.gz
   echo "PATH=\$PATH:/opt/kontain/bin" >> ~vagrant/.bashrc

   # Add gdb, we usually need it
   apt-get install gdb -y -q

   # Configure Docker and restart
   usermod -aG docker vagrant
   cp /tmp/kontain/daemon.json /etc/docker/daemon.json
   systemctl reload-or-restart docker.service

   # clean up, out of paranoya
   rm -rf /tmp/kontain

  SHELL

   l=ENV['KM_VAGRANT_PRELOAD_IMAGES']
   if l != nil then
      l.split.each do |image|
         config.vm.provision "shell", inline: "docker pull #{image}"
      end
   end

   config.vm.provider "virtualbox" do |v|
      v.memory = 8182
      v.cpus = 4
   end

   config.vm.provider "libvirt" do |v|
      v.memory = 8182
      v.cpus = 4
   end

   config.vm.post_up_message = "Welcome to Ubuntu with Kontain / KKM preinstalled."
end
