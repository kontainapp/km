#!/usr/bin/env -S stap -w
#
# Copyright 2021 Kontain Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# counts hypercalls called by the payload
#
# Usage: sudo ./tools/stap/count_hcalls.stp  -c './build/km/km payload.km <payload args>'

global hcalls
global exit, hc

probe module("kvm*").function("handle_io")
{
   if (hc[$vcpu->vcpu_id] != 0) {
      hcalls[hc[$vcpu->vcpu_id]] <<< gettimeofday_ns() - exit[$vcpu->vcpu_id]
      hc[$vcpu->vcpu_id] = 0
   }
}

probe module("kvm").function("kvm_fast_pio").return
{
   exit[$vcpu->vcpu_id] = gettimeofday_ns()
   hc[$vcpu->vcpu_id] = $port - 1024*32
}

probe end
{
   foreach ([x-] in hcalls) {
      printf("% 24s(%4d) called\t %9d times, %d ns avg, %d total msecs_to_string\n", syscall_name(x), x, @count(hcalls[x]), @avg(hcalls[x]), @sum(hcalls[x])/1000)
   }
}
